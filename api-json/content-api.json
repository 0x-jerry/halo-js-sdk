{
  "openapi": "3.0.3",
  "info": {
    "title": "Halo API Documentation",
    "description": "Documentation for Halo API",
    "termsOfService": "https://github.com/halo-dev",
    "contact": {
      "name": "halo-dev",
      "url": "https://github.com/halo-dev/halo/issues",
      "email": "hi@halo.run"
    },
    "license": {
      "name": "GNU General Public License v3.0",
      "url": "https://github.com/halo-dev/halo/blob/master/LICENSE"
    },
    "version": "1.4.5"
  },
  "servers": [
    {
      "url": "http://localhost:8090",
      "description": "Inferred Url"
    }
  ],
  "tags": [
    {
      "name": "archive-controller",
      "description": "Archive Controller"
    },
    {
      "name": "category-controller",
      "description": "Category Controller"
    },
    {
      "name": "journal-controller",
      "description": "Journal Controller"
    },
    {
      "name": "link-controller",
      "description": "Link Controller"
    },
    {
      "name": "menu-controller",
      "description": "Menu Controller"
    },
    {
      "name": "option-controller",
      "description": "Option Controller"
    },
    {
      "name": "photo-controller",
      "description": "Photo Controller"
    },
    {
      "name": "post-controller",
      "description": "Post Controller"
    },
    {
      "name": "sheet-controller",
      "description": "Sheet Controller"
    },
    {
      "name": "statistic-controller",
      "description": "Statistic Controller"
    },
    {
      "name": "tag-controller",
      "description": "Tag Controller"
    },
    {
      "name": "theme-controller",
      "description": "Theme Controller"
    },
    {
      "name": "user-controller",
      "description": "User Controller"
    }
  ],
  "paths": {
    "/api/content/archives/months": {
      "get": {
        "tags": [
          "archive-controller"
        ],
        "summary": "listMonthArchives",
        "operationId": "listMonthArchivesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArchiveMonthVO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/archives/years": {
      "get": {
        "tags": [
          "archive-controller"
        ],
        "summary": "listYearArchives",
        "operationId": "listYearArchivesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArchiveYearVO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/categories": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "Lists categories",
        "operationId": "listCategoriesUsingGET",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "more",
            "in": "query",
            "description": "more",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/categories/{slug}/posts": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "Lists posts by category slug",
        "operationId": "listPostsByUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "slug",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "password",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfPostListVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/journals": {
      "get": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Lists journals",
        "operationId": "pageByUsingGET_9",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfJournalWithCmtCountDTO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/journals/comments": {
      "post": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Comments a post",
        "operationId": "commentUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalCommentParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseCommentDTO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/journals/{id}/likes": {
      "post": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Likes a journal",
        "operationId": "likeUsingPOST",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/journals/{journalId}": {
      "get": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Gets a journal detail",
        "operationId": "getByUsingGET_12",
        "parameters": [
          {
            "name": "journalId",
            "in": "path",
            "description": "journalId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JournalDTO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/journals/{journalId}/comments/list_view": {
      "get": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Lists comment with list view",
        "operationId": "listCommentsUsingGET_3",
        "parameters": [
          {
            "name": "journalId",
            "in": "path",
            "description": "journalId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfBaseCommentWithParentVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/journals/{journalId}/comments/top_view": {
      "get": {
        "tags": [
          "journal-controller"
        ],
        "summary": "listTopComments",
        "operationId": "listTopCommentsUsingGET",
        "parameters": [
          {
            "name": "journalId",
            "in": "path",
            "description": "journalId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfCommentWithHasChildrenVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/journals/{journalId}/comments/tree_view": {
      "get": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Lists comments with tree view",
        "operationId": "listCommentsTreeUsingGET",
        "parameters": [
          {
            "name": "journalId",
            "in": "path",
            "description": "journalId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfBaseCommentVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/journals/{journalId}/comments/{commentParentId}/children": {
      "get": {
        "tags": [
          "journal-controller"
        ],
        "summary": "listChildrenBy",
        "operationId": "listChildrenByUsingGET",
        "parameters": [
          {
            "name": "journalId",
            "in": "path",
            "description": "journalId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "commentParentId",
            "in": "path",
            "description": "commentParentId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseCommentDTO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/links": {
      "get": {
        "tags": [
          "link-controller"
        ],
        "summary": "List all links",
        "operationId": "listLinksUsingGET_1",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinkDTO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/links/team_view": {
      "get": {
        "tags": [
          "link-controller"
        ],
        "summary": "List all links with team view",
        "operationId": "listTeamVosUsingGET",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinkTeamVO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/menus": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Lists all menus",
        "operationId": "listAllUsingGET_4",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuDTO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/menus/tree_view": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Lists menus with tree view",
        "operationId": "listMenusTreeUsingGET",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuVO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/options/comment": {
      "get": {
        "tags": [
          "option-controller"
        ],
        "summary": "Options for comment",
        "operationId": "commentUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/options/keys/{key}": {
      "get": {
        "tags": [
          "option-controller"
        ],
        "summary": "Gets option value by option key",
        "operationId": "getByUsingGET_13",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseOfobject"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/options/list_view": {
      "get": {
        "tags": [
          "option-controller"
        ],
        "summary": "Lists all options with list view",
        "operationId": "listAllUsingGET_5",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OptionDTO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/options/map_view": {
      "get": {
        "tags": [
          "option-controller"
        ],
        "summary": "Lists options with map view",
        "operationId": "listAllWithMapViewUsingGET_1",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "key",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/photos": {
      "get": {
        "tags": [
          "photo-controller"
        ],
        "summary": "pageBy",
        "operationId": "pageByUsingGET_10",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfPhotoDTO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/photos/latest": {
      "get": {
        "tags": [
          "photo-controller"
        ],
        "summary": "listPhotos",
        "operationId": "listPhotosUsingGET_1",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhotoDTO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Lists posts",
        "operationId": "pageByUsingGET_11",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfPostListVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/comments": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "Comments a post",
        "operationId": "commentUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCommentParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseCommentDTO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/search": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "Lists posts by keyword",
        "operationId": "pageByUsingPOST",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "keyword",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfBasePostSimpleDTO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/slug": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Gets a post",
        "operationId": "getByUsingGET_15",
        "parameters": [
          {
            "name": "slug",
            "in": "query",
            "description": "slug",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formatDisabled",
            "in": "query",
            "description": "formatDisabled",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sourceDisabled",
            "in": "query",
            "description": "sourceDisabled",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PostDetailVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/{postId}": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Gets a post",
        "operationId": "getByUsingGET_14",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "formatDisabled",
            "in": "query",
            "description": "formatDisabled",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sourceDisabled",
            "in": "query",
            "description": "sourceDisabled",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PostDetailVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/{postId}/comments/list_view": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Lists comment with list view",
        "operationId": "listCommentsUsingGET_4",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfBaseCommentWithParentVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/{postId}/comments/top_view": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "listTopComments",
        "operationId": "listTopCommentsUsingGET_1",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfCommentWithHasChildrenVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/{postId}/comments/tree_view": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Lists comments with tree view",
        "operationId": "listCommentsTreeUsingGET_1",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfBaseCommentVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/{postId}/comments/{commentParentId}/children": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "listChildrenBy",
        "operationId": "listChildrenByUsingGET_1",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "commentParentId",
            "in": "path",
            "description": "commentParentId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseCommentDTO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/{postId}/likes": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "Likes a post",
        "operationId": "likeUsingPOST_1",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/{postId}/next": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Gets next post by current post id.",
        "operationId": "getNextPostByUsingGET",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PostDetailVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/posts/{postId}/prev": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Gets previous post by current post id.",
        "operationId": "getPrevPostByUsingGET",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PostDetailVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/sheets": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Lists sheets",
        "operationId": "pageByUsingGET_12",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfSheetListVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/sheets/comments": {
      "post": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Comments a post",
        "operationId": "commentUsingPOST_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SheetCommentParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseCommentDTO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/sheets/slug": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Gets a sheet by slug",
        "operationId": "getByUsingGET_17",
        "parameters": [
          {
            "name": "slug",
            "in": "query",
            "description": "slug",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formatDisabled",
            "in": "query",
            "description": "formatDisabled",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sourceDisabled",
            "in": "query",
            "description": "sourceDisabled",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SheetDetailVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/sheets/{sheetId}": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Gets a sheet",
        "operationId": "getByUsingGET_16",
        "parameters": [
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "formatDisabled",
            "in": "query",
            "description": "formatDisabled",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sourceDisabled",
            "in": "query",
            "description": "sourceDisabled",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SheetDetailVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/sheets/{sheetId}/comments/list_view": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Lists comment with list view",
        "operationId": "listCommentsUsingGET_5",
        "parameters": [
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfBaseCommentWithParentVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/sheets/{sheetId}/comments/top_view": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "listTopComments",
        "operationId": "listTopCommentsUsingGET_2",
        "parameters": [
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfCommentWithHasChildrenVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/sheets/{sheetId}/comments/tree_view": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Lists comments with tree view",
        "operationId": "listCommentsTreeUsingGET_2",
        "parameters": [
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfBaseCommentVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/sheets/{sheetId}/comments/{commentParentId}/children": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "listChildrenBy",
        "operationId": "listChildrenByUsingGET_2",
        "parameters": [
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "commentParentId",
            "in": "path",
            "description": "commentParentId",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseCommentDTO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/statistics": {
      "get": {
        "tags": [
          "statistic-controller"
        ],
        "summary": "Gets blog statistics.",
        "operationId": "statisticsUsingGET_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticDTO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/statistics/user": {
      "get": {
        "tags": [
          "statistic-controller"
        ],
        "summary": "Gets blog statistics with user",
        "operationId": "statisticsWithUserUsingGET_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticWithUserDTO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/tags": {
      "get": {
        "tags": [
          "tag-controller"
        ],
        "summary": "Lists tags",
        "operationId": "listTagsUsingGET_1",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "more",
            "in": "query",
            "description": "If the param is true, post count of tag will be returned",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagDTO"
                  }
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/tags/{slug}/posts": {
      "get": {
        "tags": [
          "tag-controller"
        ],
        "summary": "Lists posts by tag slug",
        "operationId": "listPostsByUsingGET_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "slug",
            "in": "path",
            "description": "slug",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizedPageOfPostListVO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/themes/activation": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Gets activated theme property",
        "operationId": "getByUsingGET_18",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeProperty"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/themes/activation/settings": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Lists activated theme settings",
        "operationId": "listSettingsByUsingGET_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    },
    "/api/content/users/profile": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Gets blogger profile",
        "operationId": "getProfileUsingGET_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\""
          },
          "403": {
            "description": "The client does not have access rights to the content."
          },
          "404": {
            "description": "The server can not find the requested resource."
          },
          "405": {
            "description": "The request method is known by the server but has been disabled and cannot be used. "
          },
          "500": {
            "description": "The server has encountered a situation it doesn't know how to handle."
          },
          "501": {
            "description": "The request method is not supported by the server and cannot be handled."
          },
          "503": {
            "description": "The server is not ready to handle the request."
          }
        },
        "security": [
          {
            "api_access_key": [
              "content api"
            ]
          },
          {
            "API-Authorization": [
              "content api"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ArchiveMonthVO": {
        "title": "ArchiveMonthVO",
        "type": "object",
        "properties": {
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostListVO"
            }
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ArchiveYearVO": {
        "title": "ArchiveYearVO",
        "type": "object",
        "properties": {
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostListVO"
            }
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Author": {
        "title": "Author",
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        }
      },
      "BaseCommentDTO": {
        "title": "BaseCommentDTO",
        "type": "object",
        "properties": {
          "allowNotification": {
            "type": "boolean"
          },
          "author": {
            "type": "string"
          },
          "authorUrl": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "gravatarMd5": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ipAddress": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          "userAgent": {
            "type": "string"
          }
        }
      },
      "BaseCommentVO": {
        "title": "BaseCommentVO",
        "type": "object",
        "properties": {
          "allowNotification": {
            "type": "boolean"
          },
          "author": {
            "type": "string"
          },
          "authorUrl": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseCommentVO"
            }
          },
          "content": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "gravatarMd5": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ipAddress": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          "userAgent": {
            "type": "string"
          }
        }
      },
      "BaseCommentWithParentVO": {
        "title": "BaseCommentWithParentVO",
        "type": "object",
        "properties": {
          "allowNotification": {
            "type": "boolean"
          },
          "author": {
            "type": "string"
          },
          "authorUrl": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "gravatarMd5": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ipAddress": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "parent": {
            "$ref": "#/components/schemas/BaseCommentWithParentVO"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          "userAgent": {
            "type": "string"
          }
        }
      },
      "BaseMetaDTO": {
        "title": "BaseMetaDTO",
        "type": "object",
        "properties": {
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "key": {
            "type": "string"
          },
          "postId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "BasePostSimpleDTO": {
        "title": "BasePostSimpleDTO",
        "type": "object",
        "properties": {
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "disallowComment": {
            "type": "boolean"
          },
          "editTime": {
            "type": "string",
            "format": "date-time"
          },
          "editorType": {
            "type": "string",
            "enum": [
              "MARKDOWN",
              "RICHTEXT"
            ]
          },
          "fullPath": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "likes": {
            "type": "integer",
            "format": "int64"
          },
          "metaDescription": {
            "type": "string"
          },
          "metaKeywords": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "INTIMATE",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          "summary": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "topPriority": {
            "type": "integer",
            "format": "int32"
          },
          "topped": {
            "type": "boolean"
          },
          "updateTime": {
            "type": "string",
            "format": "date-time"
          },
          "visits": {
            "type": "integer",
            "format": "int64"
          },
          "wordCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BaseResponseOfobject": {
        "title": "BaseResponseOfobject",
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "devMessage": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CategoryDTO": {
        "title": "CategoryDTO",
        "type": "object",
        "properties": {
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "fullPath": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          }
        }
      },
      "CommentWithHasChildrenVO": {
        "title": "CommentWithHasChildrenVO",
        "type": "object",
        "properties": {
          "allowNotification": {
            "type": "boolean"
          },
          "author": {
            "type": "string"
          },
          "authorUrl": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "gravatarMd5": {
            "type": "string"
          },
          "hasChildren": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ipAddress": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          "userAgent": {
            "type": "string"
          }
        }
      },
      "CustomizedPageOfBaseCommentVO": {
        "title": "CustomizedPageOfBaseCommentVO",
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseCommentVO"
            }
          },
          "hasContent": {
            "type": "boolean"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "isFirst": {
            "type": "boolean"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "rpp": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CustomizedPageOfBaseCommentWithParentVO": {
        "title": "CustomizedPageOfBaseCommentWithParentVO",
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseCommentWithParentVO"
            }
          },
          "hasContent": {
            "type": "boolean"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "isFirst": {
            "type": "boolean"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "rpp": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CustomizedPageOfBasePostSimpleDTO": {
        "title": "CustomizedPageOfBasePostSimpleDTO",
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasePostSimpleDTO"
            }
          },
          "hasContent": {
            "type": "boolean"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "isFirst": {
            "type": "boolean"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "rpp": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CustomizedPageOfCommentWithHasChildrenVO": {
        "title": "CustomizedPageOfCommentWithHasChildrenVO",
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentWithHasChildrenVO"
            }
          },
          "hasContent": {
            "type": "boolean"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "isFirst": {
            "type": "boolean"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "rpp": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CustomizedPageOfJournalWithCmtCountDTO": {
        "title": "CustomizedPageOfJournalWithCmtCountDTO",
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalWithCmtCountDTO"
            }
          },
          "hasContent": {
            "type": "boolean"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "isFirst": {
            "type": "boolean"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "rpp": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CustomizedPageOfPhotoDTO": {
        "title": "CustomizedPageOfPhotoDTO",
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhotoDTO"
            }
          },
          "hasContent": {
            "type": "boolean"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "isFirst": {
            "type": "boolean"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "rpp": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CustomizedPageOfPostListVO": {
        "title": "CustomizedPageOfPostListVO",
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostListVO"
            }
          },
          "hasContent": {
            "type": "boolean"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "isFirst": {
            "type": "boolean"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "rpp": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CustomizedPageOfSheetListVO": {
        "title": "CustomizedPageOfSheetListVO",
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SheetListVO"
            }
          },
          "hasContent": {
            "type": "boolean"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "isFirst": {
            "type": "boolean"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "rpp": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "JournalCommentParam": {
        "title": "JournalCommentParam",
        "required": [
          "author",
          "content",
          "email"
        ],
        "type": "object",
        "properties": {
          "allowNotification": {
            "type": "boolean"
          },
          "author": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "authorUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "content": {
            "maxLength": 1023,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "postId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "JournalDTO": {
        "title": "JournalDTO",
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "likes": {
            "type": "integer",
            "format": "int64"
          },
          "sourceContent": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INTIMATE",
              "PUBLIC"
            ]
          }
        }
      },
      "JournalWithCmtCountDTO": {
        "title": "JournalWithCmtCountDTO",
        "type": "object",
        "properties": {
          "commentCount": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "likes": {
            "type": "integer",
            "format": "int64"
          },
          "sourceContent": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INTIMATE",
              "PUBLIC"
            ]
          }
        }
      },
      "LinkDTO": {
        "title": "LinkDTO",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "logo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "team": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "LinkTeamVO": {
        "title": "LinkTeamVO",
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkDTO"
            }
          },
          "team": {
            "type": "string"
          }
        }
      },
      "MenuDTO": {
        "title": "MenuDTO",
        "type": "object",
        "properties": {
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "target": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "MenuVO": {
        "title": "MenuVO",
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuVO"
            }
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "target": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "OptionDTO": {
        "title": "OptionDTO",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "PhotoDTO": {
        "title": "PhotoDTO",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "takeTime": {
            "type": "string",
            "format": "date-time"
          },
          "team": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "PostCommentParam": {
        "title": "PostCommentParam",
        "required": [
          "author",
          "content",
          "email"
        ],
        "type": "object",
        "properties": {
          "allowNotification": {
            "type": "boolean"
          },
          "author": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "authorUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "content": {
            "maxLength": 1023,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "postId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PostDetailVO": {
        "title": "PostDetailVO",
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDTO"
            }
          },
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "commentCount": {
            "type": "integer",
            "format": "int64"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "disallowComment": {
            "type": "boolean"
          },
          "editTime": {
            "type": "string",
            "format": "date-time"
          },
          "editorType": {
            "type": "string",
            "enum": [
              "MARKDOWN",
              "RICHTEXT"
            ]
          },
          "formatContent": {
            "type": "string"
          },
          "fullPath": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "likes": {
            "type": "integer",
            "format": "int64"
          },
          "metaDescription": {
            "type": "string"
          },
          "metaIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "metaKeywords": {
            "type": "string"
          },
          "metas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseMetaDTO"
            }
          },
          "originalContent": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "INTIMATE",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          "summary": {
            "type": "string"
          },
          "tagIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDTO"
            }
          },
          "template": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "topPriority": {
            "type": "integer",
            "format": "int32"
          },
          "topped": {
            "type": "boolean"
          },
          "updateTime": {
            "type": "string",
            "format": "date-time"
          },
          "visits": {
            "type": "integer",
            "format": "int64"
          },
          "wordCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PostListVO": {
        "title": "PostListVO",
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDTO"
            }
          },
          "commentCount": {
            "type": "integer",
            "format": "int64"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "disallowComment": {
            "type": "boolean"
          },
          "editTime": {
            "type": "string",
            "format": "date-time"
          },
          "editorType": {
            "type": "string",
            "enum": [
              "MARKDOWN",
              "RICHTEXT"
            ]
          },
          "fullPath": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "likes": {
            "type": "integer",
            "format": "int64"
          },
          "metaDescription": {
            "type": "string"
          },
          "metaKeywords": {
            "type": "string"
          },
          "metas": {
            "type": "object"
          },
          "password": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "INTIMATE",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          "summary": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDTO"
            }
          },
          "template": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "topPriority": {
            "type": "integer",
            "format": "int32"
          },
          "topped": {
            "type": "boolean"
          },
          "updateTime": {
            "type": "string",
            "format": "date-time"
          },
          "visits": {
            "type": "integer",
            "format": "int64"
          },
          "wordCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SheetCommentParam": {
        "title": "SheetCommentParam",
        "required": [
          "author",
          "content",
          "email"
        ],
        "type": "object",
        "properties": {
          "allowNotification": {
            "type": "boolean"
          },
          "author": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "authorUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "content": {
            "maxLength": 1023,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "postId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SheetDetailVO": {
        "title": "SheetDetailVO",
        "type": "object",
        "properties": {
          "commentCount": {
            "type": "integer",
            "format": "int64"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "disallowComment": {
            "type": "boolean"
          },
          "editTime": {
            "type": "string",
            "format": "date-time"
          },
          "editorType": {
            "type": "string",
            "enum": [
              "MARKDOWN",
              "RICHTEXT"
            ]
          },
          "formatContent": {
            "type": "string"
          },
          "fullPath": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "likes": {
            "type": "integer",
            "format": "int64"
          },
          "metaDescription": {
            "type": "string"
          },
          "metaIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "metaKeywords": {
            "type": "string"
          },
          "metas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseMetaDTO"
            }
          },
          "originalContent": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "INTIMATE",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          "summary": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "topPriority": {
            "type": "integer",
            "format": "int32"
          },
          "topped": {
            "type": "boolean"
          },
          "updateTime": {
            "type": "string",
            "format": "date-time"
          },
          "visits": {
            "type": "integer",
            "format": "int64"
          },
          "wordCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SheetListVO": {
        "title": "SheetListVO",
        "type": "object",
        "properties": {
          "commentCount": {
            "type": "integer",
            "format": "int64"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "disallowComment": {
            "type": "boolean"
          },
          "editTime": {
            "type": "string",
            "format": "date-time"
          },
          "editorType": {
            "type": "string",
            "enum": [
              "MARKDOWN",
              "RICHTEXT"
            ]
          },
          "fullPath": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "likes": {
            "type": "integer",
            "format": "int64"
          },
          "metaDescription": {
            "type": "string"
          },
          "metaKeywords": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "INTIMATE",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          "summary": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "topPriority": {
            "type": "integer",
            "format": "int32"
          },
          "topped": {
            "type": "boolean"
          },
          "updateTime": {
            "type": "string",
            "format": "date-time"
          },
          "visits": {
            "type": "integer",
            "format": "int64"
          },
          "wordCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StatisticDTO": {
        "title": "StatisticDTO",
        "type": "object",
        "properties": {
          "attachmentCount": {
            "type": "integer",
            "format": "int64"
          },
          "birthday": {
            "type": "integer",
            "format": "int64"
          },
          "categoryCount": {
            "type": "integer",
            "format": "int64"
          },
          "commentCount": {
            "type": "integer",
            "format": "int64"
          },
          "establishDays": {
            "type": "integer",
            "format": "int64"
          },
          "journalCount": {
            "type": "integer",
            "format": "int64"
          },
          "likeCount": {
            "type": "integer",
            "format": "int64"
          },
          "linkCount": {
            "type": "integer",
            "format": "int64"
          },
          "postCount": {
            "type": "integer",
            "format": "int64"
          },
          "tagCount": {
            "type": "integer",
            "format": "int64"
          },
          "visitCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StatisticWithUserDTO": {
        "title": "StatisticWithUserDTO",
        "type": "object",
        "properties": {
          "attachmentCount": {
            "type": "integer",
            "format": "int64"
          },
          "birthday": {
            "type": "integer",
            "format": "int64"
          },
          "categoryCount": {
            "type": "integer",
            "format": "int64"
          },
          "commentCount": {
            "type": "integer",
            "format": "int64"
          },
          "establishDays": {
            "type": "integer",
            "format": "int64"
          },
          "journalCount": {
            "type": "integer",
            "format": "int64"
          },
          "likeCount": {
            "type": "integer",
            "format": "int64"
          },
          "linkCount": {
            "type": "integer",
            "format": "int64"
          },
          "postCount": {
            "type": "integer",
            "format": "int64"
          },
          "tagCount": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "visitCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TagDTO": {
        "title": "TagDTO",
        "type": "object",
        "properties": {
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "fullPath": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          }
        }
      },
      "ThemeProperty": {
        "title": "ThemeProperty",
        "type": "object",
        "properties": {
          "activated": {
            "type": "boolean"
          },
          "author": {
            "$ref": "#/components/schemas/Author"
          },
          "branch": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "folderName": {
            "type": "string"
          },
          "hasOptions": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "postMetaField": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "repo": {
            "type": "string"
          },
          "require": {
            "type": "string"
          },
          "screenshots": {
            "type": "string"
          },
          "sheetMetaField": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "themePath": {
            "type": "string"
          },
          "updateStrategy": {
            "type": "string",
            "enum": [
              "BRANCH",
              "RELEASE"
            ]
          },
          "version": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        }
      },
      "UserDTO": {
        "title": "UserDTO",
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "mfaType": {
            "type": "string",
            "enum": [
              "NONE",
              "TFA_TOTP"
            ]
          },
          "nickname": {
            "type": "string"
          },
          "updateTime": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "api_access_key": {
        "type": "apiKey",
        "name": "api_access_key",
        "in": "query"
      },
      "API-Authorization": {
        "type": "apiKey",
        "name": "API-Authorization",
        "in": "header"
      }
    }
  }
}