{
  "swagger": "2.0",
  "info": {
    "description": "Documentation for Halo API",
    "version": "1.4.3",
    "title": "Halo API Documentation",
    "termsOfService": "https://github.com/halo-dev",
    "contact": {
      "name": "halo-dev",
      "url": "https://github.com/halo-dev/halo/issues",
      "email": "hi@halo.run"
    },
    "license": {
      "name": "GNU General Public License v3.0",
      "url": "https://github.com/halo-dev/halo/blob/master/LICENSE"
    }
  },
  "host": "localhost:8090",
  "basePath": "/",
  "tags": [
    {
      "name": "admin-controller",
      "description": "Admin Controller"
    },
    {
      "name": "attachment-controller",
      "description": "Attachment Controller"
    },
    {
      "name": "backup-controller",
      "description": "Backup Controller"
    },
    {
      "name": "category-controller",
      "description": "Category Controller"
    },
    {
      "name": "install-controller",
      "description": "Install Controller"
    },
    {
      "name": "journal-comment-controller",
      "description": "Journal Comment Controller"
    },
    {
      "name": "journal-controller",
      "description": "Journal Controller"
    },
    {
      "name": "link-controller",
      "description": "Link Controller"
    },
    {
      "name": "log-controller",
      "description": "Log Controller"
    },
    {
      "name": "mail-controller",
      "description": "Mail Controller"
    },
    {
      "name": "menu-controller",
      "description": "Menu Controller"
    },
    {
      "name": "migrate-controller",
      "description": "Migrate Controller"
    },
    {
      "name": "option-controller",
      "description": "Option Controller"
    },
    {
      "name": "photo-controller",
      "description": "Photo Controller"
    },
    {
      "name": "post-comment-controller",
      "description": "Post Comment Controller"
    },
    {
      "name": "post-controller",
      "description": "Post Controller"
    },
    {
      "name": "sheet-comment-controller",
      "description": "Sheet Comment Controller"
    },
    {
      "name": "sheet-controller",
      "description": "Sheet Controller"
    },
    {
      "name": "static-storage-controller",
      "description": "Static Storage Controller"
    },
    {
      "name": "statistic-controller",
      "description": "Statistic Controller"
    },
    {
      "name": "tag-controller",
      "description": "Tag Controller"
    },
    {
      "name": "theme-controller",
      "description": "Theme Controller"
    },
    {
      "name": "user-controller",
      "description": "User Controller"
    }
  ],
  "paths": {
    "/api/admin/attachments": {
      "get": {
        "tags": [
          "attachment-controller"
        ],
        "summary": "pageBy",
        "operationId": "pageByUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "attachmentType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ALIOSS",
              "BAIDUBOS",
              "HUAWEIOBS",
              "LOCAL",
              "MINIO",
              "QINIUOSS",
              "SMMS",
              "TENCENTCOS",
              "UPOSS"
            ]
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mediaType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«AttachmentDTO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "attachment-controller"
        ],
        "summary": "Deletes attachments permanently in batch by id array",
        "operationId": "deletePermanentlyInBatchUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ids",
            "description": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attachment"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/attachments/media_types": {
      "get": {
        "tags": [
          "attachment-controller"
        ],
        "summary": "Lists all of media types",
        "operationId": "listMediaTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/attachments/types": {
      "get": {
        "tags": [
          "attachment-controller"
        ],
        "summary": "Lists all of types.",
        "operationId": "listTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ALIOSS",
                  "BAIDUBOS",
                  "HUAWEIOBS",
                  "LOCAL",
                  "MINIO",
                  "QINIUOSS",
                  "SMMS",
                  "TENCENTCOS",
                  "UPOSS"
                ]
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/attachments/upload": {
      "post": {
        "tags": [
          "attachment-controller"
        ],
        "summary": "Uploads single file",
        "operationId": "uploadAttachmentUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/attachments/uploads": {
      "post": {
        "tags": [
          "attachment-controller"
        ],
        "summary": "Uploads multi files (Invalid in Swagger UI)",
        "operationId": "uploadAttachmentsUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "files",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "file"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttachmentDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/attachments/{attachmentId}": {
      "put": {
        "tags": [
          "attachment-controller"
        ],
        "summary": "Updates a attachment",
        "operationId": "updateByUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "description": "attachmentId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "attachmentParam",
            "description": "attachmentParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachmentParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/attachments/{id}": {
      "get": {
        "tags": [
          "attachment-controller"
        ],
        "summary": "Gets attachment detail by id",
        "operationId": "getByUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "attachment-controller"
        ],
        "summary": "Deletes attachment permanently by id",
        "operationId": "deletePermanentlyUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/backups/data": {
      "get": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Lists all exported data",
        "operationId": "listExportedDataUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackupDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Exports all data",
        "operationId": "exportDataUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Deletes a exported data",
        "operationId": "deleteExportedDataUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "description": "filename",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/backups/data/{fileName}": {
      "get": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Downloads a exported data",
        "operationId": "downloadExportedDataUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "description": "fileName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/backups/markdown/export": {
      "get": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Gets all markdown backups",
        "operationId": "listMarkdownsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackupDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Exports markdowns",
        "operationId": "exportMarkdownsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postMarkdownParam",
            "description": "postMarkdownParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostMarkdownParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Deletes a markdown backup",
        "operationId": "deleteMarkdownUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "description": "filename",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/backups/markdown/export/{fileName}": {
      "get": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Downloads a work markdown backup file",
        "operationId": "downloadMarkdownUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "description": "fileName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/backups/markdown/import": {
      "post": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Imports markdown",
        "operationId": "backupMarkdownsUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasePostDetailDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/backups/work-dir": {
      "get": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Gets all work directory backups",
        "operationId": "listBackupsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackupDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Backups work directory",
        "operationId": "backupHaloUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Deletes a work directory backup",
        "operationId": "deleteBackupUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "description": "filename",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/backups/work-dir/{fileName}": {
      "get": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Downloads a work directory backup file",
        "operationId": "downloadBackupUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "description": "fileName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/categories": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "Lists all categories",
        "operationId": "listAllUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "more",
            "in": "query",
            "description": "more",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "category-controller"
        ],
        "summary": "Creates category",
        "operationId": "createByUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "categoryParam",
            "description": "categoryParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/categories/tree_view": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "List all categories as tree",
        "operationId": "listAsTreeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryVO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/categories/{categoryId}": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "Gets category detail",
        "operationId": "getByUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "categoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "category-controller"
        ],
        "summary": "Updates category",
        "operationId": "updateByUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "categoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "categoryParam",
            "description": "categoryParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "category-controller"
        ],
        "summary": "Deletes category",
        "operationId": "deletePermanentlyUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "categoryId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/counts": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Gets count info",
        "operationId": "getCountUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StatisticDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/api/admin/environments": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Gets environments info",
        "operationId": "getEnvironmentsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnvironmentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/halo/logfile": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Gets halo log file content",
        "operationId": "getLogFilesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "lines",
            "in": "query",
            "description": "lines",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/installations": {
      "post": {
        "tags": [
          "install-controller"
        ],
        "summary": "Initializes the blog",
        "operationId": "installBlogUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "installParam",
            "description": "installParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstallParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/is_installed": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Checks Installation status",
        "operationId": "isInstallUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/journals": {
      "get": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Lists journals",
        "operationId": "pageByUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "INTIMATE",
              "PUBLIC"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«JournalWithCmtCountDTO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Creates a journal",
        "operationId": "createByUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "journalParam",
            "description": "journalParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/journals/comments": {
      "get": {
        "tags": [
          "journal-comment-controller"
        ],
        "summary": "Lists journal comments",
        "operationId": "pageByUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«JournalCommentWithJournalVO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "journal-comment-controller"
        ],
        "summary": "Creates a journal comment",
        "operationId": "createCommentByUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "journalCommentParam",
            "description": "journalCommentParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalCommentParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/journals/comments/latest": {
      "get": {
        "tags": [
          "journal-comment-controller"
        ],
        "summary": "Lists latest journal comments",
        "operationId": "listLatestUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          {
            "name": "top",
            "in": "query",
            "description": "top",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JournalCommentWithJournalVO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/journals/comments/{commentId}": {
      "delete": {
        "tags": [
          "journal-comment-controller"
        ],
        "summary": "Deletes comment permanently and recursively",
        "operationId": "deleteByUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "commentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/journals/comments/{commentId}/status/{status}": {
      "put": {
        "tags": [
          "journal-comment-controller"
        ],
        "summary": "Updates comment status",
        "operationId": "updateStatusByUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "commentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/journals/comments/{journalId}/list_view": {
      "get": {
        "tags": [
          "journal-comment-controller"
        ],
        "summary": "Lists comment with list view",
        "operationId": "listCommentsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "journalId",
            "in": "path",
            "description": "journalId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«BaseCommentWithParentVO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/journals/comments/{journalId}/tree_view": {
      "get": {
        "tags": [
          "journal-comment-controller"
        ],
        "summary": "Lists comments with tree view",
        "operationId": "listCommentTreeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "journalId",
            "in": "path",
            "description": "journalId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«BaseCommentVO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/journals/latest": {
      "get": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Gets latest journals",
        "operationId": "pageLatestUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "top",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JournalWithCmtCountDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/journals/{id}": {
      "put": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Updates a Journal",
        "operationId": "updateByUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "journalParam",
            "description": "journalParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/journals/{journalId}": {
      "delete": {
        "tags": [
          "journal-controller"
        ],
        "summary": "Delete journal",
        "operationId": "deleteByUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "journalId",
            "in": "path",
            "description": "journalId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JournalDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/links": {
      "get": {
        "tags": [
          "link-controller"
        ],
        "summary": "Lists links",
        "operationId": "listLinksUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "link-controller"
        ],
        "summary": "Creates a link",
        "operationId": "createByUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "linkParam",
            "description": "linkParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LinkDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/links/teams": {
      "get": {
        "tags": [
          "link-controller"
        ],
        "summary": "Lists all link teams",
        "operationId": "teamsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/links/{id}": {
      "get": {
        "tags": [
          "link-controller"
        ],
        "summary": "Gets link detail by id",
        "operationId": "getByUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LinkDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "link-controller"
        ],
        "summary": "Updates a link",
        "operationId": "updateByUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "linkParam",
            "description": "linkParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LinkDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "link-controller"
        ],
        "summary": "Delete link by id",
        "operationId": "deletePermanentlyUsingDELETE_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/login": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Login",
        "operationId": "authUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "loginParam",
            "description": "loginParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthToken"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/login/precheck": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Login",
        "operationId": "authPreCheckUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "loginParam",
            "description": "loginParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoginPreCheckDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/logout": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Logs out (Clear session)",
        "operationId": "logoutUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/logs": {
      "get": {
        "tags": [
          "log-controller"
        ],
        "summary": "Lists logs",
        "operationId": "pageByUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«LogDTO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/logs/clear": {
      "get": {
        "tags": [
          "log-controller"
        ],
        "summary": "Clears all logs",
        "operationId": "clearUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/logs/latest": {
      "get": {
        "tags": [
          "log-controller"
        ],
        "summary": "Pages latest logs",
        "operationId": "pageLatestUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "top",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LogDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/mails/test": {
      "post": {
        "tags": [
          "mail-controller"
        ],
        "summary": "Tests the SMTP service",
        "operationId": "testMailUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "mailParam",
            "description": "mailParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MailParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/mails/test/connection": {
      "post": {
        "tags": [
          "mail-controller"
        ],
        "summary": "Test connection with email server",
        "operationId": "testConnectionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/menus": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Lists all menus",
        "operationId": "listAllUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Creates a menu",
        "operationId": "createByUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "menuParam",
            "description": "menuParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MenuParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/menus/batch": {
      "post": {
        "tags": [
          "menu-controller"
        ],
        "summary": "createBatchBy",
        "operationId": "createBatchByUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "menuParams",
            "description": "menuParams",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuParam"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "menu-controller"
        ],
        "summary": "updateBatchBy",
        "operationId": "updateBatchByUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "menuParams",
            "description": "menuParams",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuParam"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "menu-controller"
        ],
        "summary": "deleteBatchBy",
        "operationId": "deleteBatchByUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "menuIds",
            "description": "menuIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/menus/team/tree_view": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Lists menus as tree by team",
        "operationId": "listDefaultsAsTreeByTeamUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "team",
            "in": "query",
            "description": "team",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuVO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/menus/teams": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Lists all menu teams",
        "operationId": "teamsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/menus/tree_view": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Lists menus as tree",
        "operationId": "listAsTreeUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuVO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/menus/{menuId}": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Gets menu detail by id",
        "operationId": "getByUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "description": "menuId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Updates a menu",
        "operationId": "updateByUsingPUT_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "description": "menuId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "menuParam",
            "description": "menuParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MenuParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Deletes a menu",
        "operationId": "deleteByUsingDELETE_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "description": "menuId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MenuDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/migrations/halo": {
      "post": {
        "tags": [
          "migrate-controller"
        ],
        "summary": "Migrate from Halo",
        "operationId": "migrateHaloUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/options": {
      "get": {
        "tags": [
          "option-controller"
        ],
        "summary": "Lists options",
        "operationId": "listAllUsingGET_2",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OptionDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "option-controller"
        ],
        "summary": "Creates option",
        "operationId": "createByUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "optionParam",
            "description": "optionParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OptionParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/options/list_view": {
      "get": {
        "tags": [
          "option-controller"
        ],
        "summary": "Lists all options with list view",
        "operationId": "listAllWithListViewUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CUSTOM",
              "INTERNAL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«OptionSimpleDTO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/options/map_view": {
      "get": {
        "tags": [
          "option-controller"
        ],
        "summary": "Lists all options with map view",
        "operationId": "listAllWithMapViewUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/options/map_view/keys": {
      "post": {
        "tags": [
          "option-controller"
        ],
        "summary": "Lists options with map view by keys",
        "operationId": "listAllWithMapViewUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "keys",
            "description": "keys",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/options/map_view/saving": {
      "post": {
        "tags": [
          "option-controller"
        ],
        "summary": "Saves options by option map",
        "operationId": "saveOptionsWithMapViewUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "optionMap",
            "description": "optionMap",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/options/saving": {
      "post": {
        "tags": [
          "option-controller"
        ],
        "summary": "Saves options",
        "operationId": "saveOptionsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "optionParams",
            "description": "optionParams",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OptionParam"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/options/{id}": {
      "get": {
        "tags": [
          "option-controller"
        ],
        "summary": "Gets option detail by id",
        "operationId": "getByUsingGET_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OptionSimpleDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/options/{optionId}": {
      "put": {
        "tags": [
          "option-controller"
        ],
        "summary": "Updates option",
        "operationId": "updateByUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "description": "optionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "optionParam",
            "description": "optionParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OptionParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "option-controller"
        ],
        "summary": "Deletes option",
        "operationId": "deletePermanentlyUsingDELETE_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "description": "optionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/password/code": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Sends reset password verify code",
        "operationId": "sendResetCodeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "param",
            "description": "param",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/password/reset": {
      "put": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Resets password by verify code",
        "operationId": "resetPasswordUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "param",
            "description": "param",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/photos": {
      "get": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Lists photos",
        "operationId": "pageByUsingGET_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "team",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«PhotoDTO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Creates a photo",
        "operationId": "createByUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "photoParam",
            "description": "photoParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhotoParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PhotoDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/photos/latest": {
      "get": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Lists latest photos",
        "operationId": "listPhotosUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PhotoDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/photos/teams": {
      "get": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Lists all of photo teams",
        "operationId": "listTeamsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/photos/{photoId}": {
      "get": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Gets photo detail by id",
        "operationId": "getByUsingGET_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "description": "photoId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PhotoDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Updates a photo",
        "operationId": "updateByUsingPUT_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "description": "photoId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "photoParam",
            "description": "photoParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhotoParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PhotoDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "photo-controller"
        ],
        "summary": "Deletes photo by id",
        "operationId": "deletePermanentlyUsingDELETE_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "description": "photoId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Lists posts",
        "operationId": "pageByUsingGET_6",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "more",
            "in": "query",
            "description": "more",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DRAFT",
              "INTIMATE",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«BasePostSimpleDTO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "Creates a post",
        "operationId": "createByUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "autoSave",
            "in": "query",
            "description": "autoSave",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "postParam",
            "description": "postParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostDetailVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "post-controller"
        ],
        "summary": "Deletes posts permanently in batch by id array",
        "operationId": "deletePermanentlyInBatchUsingDELETE_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ids",
            "description": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/comments": {
      "get": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Lists post comments",
        "operationId": "pageByUsingGET_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«PostCommentWithPostVO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Creates a post comment (new or reply)",
        "operationId": "createByUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postCommentParam",
            "description": "postCommentParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCommentParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Delete post comments permanently in batch by id array",
        "operationId": "deletePermanentlyInBatchUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ids",
            "description": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PostComment"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/comments/latest": {
      "get": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Pages post latest comments",
        "operationId": "listLatestUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          {
            "name": "top",
            "in": "query",
            "description": "top",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PostCommentWithPostVO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/comments/status/{status}": {
      "put": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Updates post comment status in batch",
        "operationId": "updateStatusInBatchUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ids",
            "description": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BaseCommentDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/comments/{commentId}": {
      "get": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Gets a post comment by comment id",
        "operationId": "getByUsingGET_6",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "commentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostCommentWithPostVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Updates a post comment",
        "operationId": "updateByUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "commentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "commentParam",
            "description": "commentParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCommentParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Deletes post comment permanently and recursively",
        "operationId": "deletePermanentlyUsingDELETE_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "commentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/comments/{commentId}/status/{status}": {
      "put": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Updates post comment status",
        "operationId": "updateStatusByUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "commentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/comments/{postId}/list_view": {
      "get": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Lists post comment with list view",
        "operationId": "listCommentsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«BaseCommentWithParentVO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/comments/{postId}/tree_view": {
      "get": {
        "tags": [
          "post-comment-controller"
        ],
        "summary": "Lists post comments with tree view",
        "operationId": "listCommentTreeUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«BaseCommentVO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/latest": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Pages latest post",
        "operationId": "pageLatestUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "top",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasePostMinimalDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/preview/{postId}": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Gets a post preview link",
        "operationId": "previewUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/status/{status}": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Gets a page of post by post status",
        "operationId": "pageByStatusUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "more",
            "in": "query",
            "description": "more",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "string",
            "enum": [
              "DRAFT",
              "INTIMATE",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«BasePostSimpleDTO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "post-controller"
        ],
        "summary": "Updates post status in batch",
        "operationId": "updateStatusInBatchUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ids",
            "description": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "string",
            "enum": [
              "DRAFT",
              "INTIMATE",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/{postId}": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Gets a post",
        "operationId": "getByUsingGET_7",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostDetailVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "post-controller"
        ],
        "summary": "Updates a post",
        "operationId": "updateByUsingPUT_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "autoSave",
            "in": "query",
            "description": "autoSave",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "postParam",
            "description": "postParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostDetailVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "post-controller"
        ],
        "summary": "Deletes a photo permanently",
        "operationId": "deletePermanentlyUsingDELETE_6",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/{postId}/likes": {
      "put": {
        "tags": [
          "post-controller"
        ],
        "summary": "Likes a post",
        "operationId": "likesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/{postId}/preview": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "Gets a post preview link",
        "operationId": "previewUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/{postId}/status/draft/content": {
      "put": {
        "tags": [
          "post-controller"
        ],
        "summary": "Updates draft",
        "operationId": "updateDraftByUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "contentParam",
            "description": "contentParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostContentParam"
            }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasePostDetailDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/posts/{postId}/status/{status}": {
      "put": {
        "tags": [
          "post-controller"
        ],
        "summary": "Updates post status",
        "operationId": "updateStatusByUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "postId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "string",
            "enum": [
              "DRAFT",
              "INTIMATE",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasePostMinimalDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/refresh/{refreshToken}": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "Refreshes token",
        "operationId": "refreshUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "refreshToken",
            "in": "path",
            "description": "refreshToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthToken"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Gets a page of sheet",
        "operationId": "pageByUsingGET_8",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«SheetListVO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Creates a sheet",
        "operationId": "createByUsingPOST_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "autoSave",
            "in": "query",
            "description": "autoSave",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "sheetParam",
            "description": "sheetParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SheetParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SheetDetailVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/comments": {
      "get": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Lists sheet comments",
        "operationId": "pageByUsingGET_7",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«SheetCommentWithSheetVO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Creates a sheet comment (new or reply)",
        "operationId": "createByUsingPOST_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "commentParam",
            "description": "commentParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SheetCommentParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Deletes sheet comments permanently in batch by id array",
        "operationId": "deletePermanentlyInBatchUsingDELETE_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ids",
            "description": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SheetComment"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/comments/latest": {
      "get": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Lists latest sheet comments",
        "operationId": "listLatestUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          },
          {
            "name": "top",
            "in": "query",
            "description": "top",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SheetCommentWithSheetVO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/comments/status/{status}": {
      "put": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Updates sheet comment status in batch",
        "operationId": "updateStatusInBatchUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ids",
            "description": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BaseCommentDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/comments/{commentId}": {
      "get": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Gets a sheet comment by comment id",
        "operationId": "getByUsingGET_8",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "commentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SheetCommentWithSheetVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Updates a sheet comment",
        "operationId": "updateByUsingPUT_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "commentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "commentParam",
            "description": "commentParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SheetCommentParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Deletes sheet comment permanently and recursively",
        "operationId": "deletePermanentlyUsingDELETE_7",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "commentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/comments/{commentId}/status/{status}": {
      "put": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Updates sheet comment status",
        "operationId": "updateStatusByUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "commentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "string",
            "enum": [
              "AUDITING",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseCommentDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/comments/{sheetId}/list_view": {
      "get": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Lists sheet comment with list view",
        "operationId": "listCommentsUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«BaseCommentWithParentVO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/comments/{sheetId}/tree_view": {
      "get": {
        "tags": [
          "sheet-comment-controller"
        ],
        "summary": "Lists sheet comments with tree view",
        "operationId": "listCommentTreeUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«BaseCommentVO»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/independent": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Lists independent sheets",
        "operationId": "independentSheetsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IndependentSheetDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/preview/{sheetId}": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Gets a sheet preview link",
        "operationId": "previewUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/{sheetId}": {
      "get": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Gets a sheet",
        "operationId": "getByUsingGET_9",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SheetDetailVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Updates a sheet",
        "operationId": "updateByUsingPUT_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "autoSave",
            "in": "query",
            "description": "autoSave",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "sheetParam",
            "description": "sheetParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SheetParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SheetDetailVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Deletes a sheet",
        "operationId": "deleteByUsingDELETE_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SheetDetailVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/{sheetId}/status/draft/content": {
      "put": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Updates draft",
        "operationId": "updateDraftByUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "contentParam",
            "description": "contentParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostContentParam"
            }
          },
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasePostDetailDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/sheets/{sheetId}/{status}": {
      "put": {
        "tags": [
          "sheet-controller"
        ],
        "summary": "Updates a sheet",
        "operationId": "updateStatusByUsingPUT_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sheetId",
            "in": "path",
            "description": "sheetId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "string",
            "enum": [
              "DRAFT",
              "INTIMATE",
              "PUBLISHED",
              "RECYCLE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/statics": {
      "get": {
        "tags": [
          "static-storage-controller"
        ],
        "summary": "Lists static files",
        "operationId": "listUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StaticFile"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "static-storage-controller"
        ],
        "summary": "Creates a folder",
        "operationId": "createFolderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "basePath",
            "in": "query",
            "description": "basePath",
            "required": false,
            "type": "string"
          },
          {
            "name": "folderName",
            "in": "query",
            "description": "folderName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "static-storage-controller"
        ],
        "summary": "Deletes file by relative path",
        "operationId": "deletePermanentlyUsingDELETE_8",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/statics/files": {
      "put": {
        "tags": [
          "static-storage-controller"
        ],
        "summary": "Save static file",
        "operationId": "saveUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "param",
            "description": "param",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticContentParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/statics/rename": {
      "post": {
        "tags": [
          "static-storage-controller"
        ],
        "summary": "Renames static file",
        "operationId": "renameUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "basePath",
            "in": "query",
            "description": "basePath",
            "required": false,
            "type": "string"
          },
          {
            "name": "newName",
            "in": "query",
            "description": "newName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/statics/upload": {
      "post": {
        "tags": [
          "static-storage-controller"
        ],
        "summary": "Uploads static file",
        "operationId": "uploadUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "basePath",
            "in": "query",
            "description": "basePath",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/statistics": {
      "get": {
        "tags": [
          "statistic-controller"
        ],
        "summary": "Gets blog statistics.",
        "operationId": "statisticsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StatisticDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/statistics/user": {
      "get": {
        "tags": [
          "statistic-controller"
        ],
        "summary": "Gets blog statistics with user",
        "operationId": "statisticsWithUserUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StatisticWithUserDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/tags": {
      "get": {
        "tags": [
          "tag-controller"
        ],
        "summary": "Lists tags",
        "operationId": "listTagsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "more",
            "in": "query",
            "description": "Return more information(post count) if it is set",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagDTO"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "tag-controller"
        ],
        "summary": "Creates a tag",
        "operationId": "createTagUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "tagParam",
            "description": "tagParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/tags/{tagId}": {
      "get": {
        "tags": [
          "tag-controller"
        ],
        "summary": "Gets tag detail by id",
        "operationId": "getByUsingGET_10",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "tagId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "tag-controller"
        ],
        "summary": "Updates a tag",
        "operationId": "updateByUsingPUT_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "tagId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "tagParam",
            "description": "tagParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "tag-controller"
        ],
        "summary": "Deletes a tag",
        "operationId": "deletePermanentlyUsingDELETE_9",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "tagId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Lists all themes",
        "operationId": "listAllUsingGET_3",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ThemeProperty"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/activation": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Gets activate theme",
        "operationId": "getActivateThemeUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeProperty"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/activation/configurations": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Fetches activated theme configuration",
        "operationId": "fetchConfigUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«object»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/activation/files": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Lists all activate theme files",
        "operationId": "listFilesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ThemeFile"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/activation/settings": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Lists activated theme settings",
        "operationId": "listSettingsByUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Saves theme settings",
        "operationId": "saveSettingsByUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "settings",
            "description": "settings",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/activation/template/custom/post": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Gets custom post templates",
        "operationId": "customPostTemplateUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/activation/template/custom/sheet": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Gets custom sheet templates",
        "operationId": "customSheetTemplateUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/activation/template/exists": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Determines if template exists",
        "operationId": "existsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "description": "template",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/fetchBranch": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Fetch specific branch",
        "operationId": "fetchBranchUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "branch",
            "in": "query",
            "description": "branch",
            "required": true,
            "type": "string"
          },
          {
            "name": "uri",
            "in": "query",
            "description": "uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeProperty"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/api/admin/themes/fetchLatestRelease": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Fetch latest release",
        "operationId": "fetchLatestReleaseUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeProperty"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/api/admin/themes/fetching": {
      "post": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Fetches a new theme",
        "operationId": "fetchThemeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeProperty"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/fetching/git/branches": {
      "post": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Fetches all branches",
        "operationId": "fetchBranchesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ThemeProperty"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/api/admin/themes/fetching/{themeId}": {
      "put": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Upgrades theme from remote",
        "operationId": "updateThemeByFetchingUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeProperty"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/fetchingBranches": {
      "post": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Fetches all branches",
        "operationId": "fetchBranchesUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ThemeProperty"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/api/admin/themes/fetchingRelease": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Fetches a specific release",
        "operationId": "fetchReleaseUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "tag",
            "required": true,
            "type": "string"
          },
          {
            "name": "uri",
            "in": "query",
            "description": "uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeProperty"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/api/admin/themes/fetchingReleases": {
      "post": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Fetches all releases",
        "operationId": "fetchReleasesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "uri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ThemeProperty"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/api/admin/themes/files/content": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Gets template content",
        "operationId": "getContentByUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Updates template content",
        "operationId": "updateContentByUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "param",
            "description": "param",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThemeContentParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/reload": {
      "post": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Reloads themes",
        "operationId": "reloadUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/upload": {
      "post": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Uploads a theme",
        "operationId": "uploadThemeUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeProperty"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/upload/{themeId}": {
      "put": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Upgrades theme by file",
        "operationId": "updateThemeByUploadUsingPUT",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeProperty"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/{themeId}": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Gets theme property by theme id",
        "operationId": "getByUsingGET_11",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeProperty"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Deletes a theme",
        "operationId": "deleteByUsingDELETE_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleteSettings",
            "in": "query",
            "description": "deleteSettings",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/{themeId}/activation": {
      "post": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Activates a theme",
        "operationId": "activeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeProperty"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/{themeId}/configurations": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Fetches theme configuration by theme id",
        "operationId": "fetchConfigUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/{themeId}/files": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Lists theme files by theme id",
        "operationId": "listFilesUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ThemeFile"
              }
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/{themeId}/files/content": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Gets template content by theme id",
        "operationId": "getContentByUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Updates template content by theme id",
        "operationId": "updateContentByUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "param",
            "description": "param",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThemeContentParam"
            }
          },
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/themes/{themeId}/settings": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Lists theme settings by theme id",
        "operationId": "listSettingsByUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Saves theme settings",
        "operationId": "saveSettingsByUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "settings",
            "description": "settings",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "themeId",
            "in": "path",
            "description": "themeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/users/mfa/generate": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Generate Multi-Factor Auth qr image",
        "operationId": "generateMFAQrImageUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "multiFactorAuthParam",
            "description": "multiFactorAuthParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiFactorAuthParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MultiFactorAuthVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/users/mfa/update": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Updates user's Multi Factor Auth",
        "operationId": "updateMFAuthUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "multiFactorAuthParam",
            "description": "multiFactorAuthParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiFactorAuthParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MultiFactorAuthVO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/users/profiles": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Gets user profile",
        "operationId": "getProfileUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Updates user profile",
        "operationId": "updateProfileUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userParam",
            "description": "userParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    },
    "/api/admin/users/profiles/password": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Updates user's password",
        "operationId": "updatePasswordUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "passwordParam",
            "description": "passwordParam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»"
            }
          }
        },
        "security": [
          {
            "Token from header": [
              "Admin api"
            ]
          },
          {
            "Token from query": [
              "Admin api"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Token from header": {
      "type": "apiKey",
      "name": "ADMIN-Authorization",
      "in": "header"
    },
    "Token from query": {
      "type": "apiKey",
      "name": "admin_token",
      "in": "query"
    }
  },
  "definitions": {
    "Attachment": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "fileKey": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "mediaType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "suffix": {
          "type": "string"
        },
        "thumbPath": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ALIOSS",
            "BAIDUBOS",
            "HUAWEIOBS",
            "LOCAL",
            "MINIO",
            "QINIUOSS",
            "SMMS",
            "TENCENTCOS",
            "UPOSS"
          ]
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Attachment"
    },
    "AttachmentDTO": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "fileKey": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "mediaType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "suffix": {
          "type": "string"
        },
        "thumbPath": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ALIOSS",
            "BAIDUBOS",
            "HUAWEIOBS",
            "LOCAL",
            "MINIO",
            "QINIUOSS",
            "SMMS",
            "TENCENTCOS",
            "UPOSS"
          ]
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AttachmentDTO"
    },
    "AttachmentParam": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "title": "AttachmentParam"
    },
    "AuthToken": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "expired_in": {
          "type": "integer",
          "format": "int32"
        },
        "refresh_token": {
          "type": "string"
        }
      },
      "title": "AuthToken"
    },
    "Author": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      },
      "title": "Author"
    },
    "BackupDTO": {
      "type": "object",
      "properties": {
        "downloadLink": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "filename": {
          "type": "string"
        },
        "updateTime": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "BackupDTO"
    },
    "BaseCommentDTO": {
      "type": "object",
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "authorUrl": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "gravatarMd5": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "AUDITING",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "userAgent": {
          "type": "string"
        }
      },
      "title": "BaseCommentDTO"
    },
    "BaseCommentVO": {
      "type": "object",
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "authorUrl": {
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseCommentVO"
          }
        },
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "gravatarMd5": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "AUDITING",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "userAgent": {
          "type": "string"
        }
      },
      "title": "BaseCommentVO"
    },
    "BaseCommentWithParentVO": {
      "type": "object",
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "authorUrl": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "gravatarMd5": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "parent": {
          "$ref": "#/definitions/BaseCommentWithParentVO"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "AUDITING",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "userAgent": {
          "type": "string"
        }
      },
      "title": "BaseCommentWithParentVO"
    },
    "BaseMetaDTO": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "BaseMetaDTO"
    },
    "BasePostDetailDTO": {
      "type": "object",
      "properties": {
        "commentCount": {
          "type": "integer",
          "format": "int64"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "disallowComment": {
          "type": "boolean"
        },
        "editTime": {
          "type": "string",
          "format": "date-time"
        },
        "editorType": {
          "type": "string",
          "enum": [
            "MARKDOWN",
            "RICHTEXT"
          ]
        },
        "formatContent": {
          "type": "string"
        },
        "fullPath": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "likes": {
          "type": "integer",
          "format": "int64"
        },
        "metaDescription": {
          "type": "string"
        },
        "metaKeywords": {
          "type": "string"
        },
        "originalContent": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "INTIMATE",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "summary": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "topPriority": {
          "type": "integer",
          "format": "int32"
        },
        "topped": {
          "type": "boolean"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "visits": {
          "type": "integer",
          "format": "int64"
        },
        "wordCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "BasePostDetailDTO"
    },
    "BasePostMinimalDTO": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "editTime": {
          "type": "string",
          "format": "date-time"
        },
        "editorType": {
          "type": "string",
          "enum": [
            "MARKDOWN",
            "RICHTEXT"
          ]
        },
        "fullPath": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "metaDescription": {
          "type": "string"
        },
        "metaKeywords": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "INTIMATE",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "title": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "BasePostMinimalDTO"
    },
    "BasePostSimpleDTO": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "disallowComment": {
          "type": "boolean"
        },
        "editTime": {
          "type": "string",
          "format": "date-time"
        },
        "editorType": {
          "type": "string",
          "enum": [
            "MARKDOWN",
            "RICHTEXT"
          ]
        },
        "fullPath": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "likes": {
          "type": "integer",
          "format": "int64"
        },
        "metaDescription": {
          "type": "string"
        },
        "metaKeywords": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "INTIMATE",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "summary": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "topPriority": {
          "type": "integer",
          "format": "int32"
        },
        "topped": {
          "type": "boolean"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "visits": {
          "type": "integer",
          "format": "int64"
        },
        "wordCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "BasePostSimpleDTO"
    },
    "BaseResponse«boolean»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "boolean"
        },
        "devMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "BaseResponse«boolean»"
    },
    "BaseResponse«object»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "devMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "BaseResponse«object»"
    },
    "BaseResponse«string»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "devMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "BaseResponse«string»"
    },
    "CategoryDTO": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "fullPath": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "slug": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      },
      "title": "CategoryDTO"
    },
    "CategoryParam": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "slug": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "thumbnail": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        }
      },
      "title": "CategoryParam"
    },
    "CategoryVO": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryVO"
          }
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "fullPath": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "slug": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      },
      "title": "CategoryVO"
    },
    "EnvironmentDTO": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            "DEMO",
            "DEVELOPMENT",
            "PRODUCTION",
            "TEST"
          ]
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "EnvironmentDTO"
    },
    "Group": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        },
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Group"
    },
    "IndependentSheetDTO": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        },
        "fullPath": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "routeName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "title": "IndependentSheetDTO"
    },
    "InputStream": {
      "type": "object",
      "title": "InputStream"
    },
    "InstallParam": {
      "type": "object",
      "required": [
        "email",
        "nickname",
        "title",
        "username"
      ],
      "properties": {
        "avatar": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "email": {
          "type": "string",
          "minLength": 0,
          "maxLength": 127
        },
        "locale": {
          "type": "string"
        },
        "nickname": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "password": {
          "type": "string",
          "minLength": 8,
          "maxLength": 100
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        }
      },
      "title": "InstallParam"
    },
    "Item": {
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string",
          "enum": [
            "BOOL",
            "DOUBLE",
            "LONG",
            "STRING"
          ]
        },
        "defaultValue": {
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        },
        "placeholder": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ATTACHMENT",
            "COLOR",
            "NUMBER",
            "RADIO",
            "SELECT",
            "SWITCH",
            "TEXT",
            "TEXTAREA"
          ]
        }
      },
      "title": "Item"
    },
    "JournalCommentParam": {
      "type": "object",
      "required": [
        "author",
        "content",
        "email"
      ],
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "authorUrl": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "content": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "email": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "postId": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "exclusiveMinimum": false
        }
      },
      "title": "JournalCommentParam"
    },
    "JournalCommentWithJournalVO": {
      "type": "object",
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "authorUrl": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "gravatarMd5": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "journal": {
          "$ref": "#/definitions/JournalDTO"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "AUDITING",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "userAgent": {
          "type": "string"
        }
      },
      "title": "JournalCommentWithJournalVO"
    },
    "JournalDTO": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "likes": {
          "type": "integer",
          "format": "int64"
        },
        "sourceContent": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "INTIMATE",
            "PUBLIC"
          ]
        }
      },
      "title": "JournalDTO"
    },
    "JournalParam": {
      "type": "object",
      "required": [
        "sourceContent"
      ],
      "properties": {
        "sourceContent": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "INTIMATE",
            "PUBLIC"
          ]
        }
      },
      "title": "JournalParam"
    },
    "JournalWithCmtCountDTO": {
      "type": "object",
      "properties": {
        "commentCount": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "likes": {
          "type": "integer",
          "format": "int64"
        },
        "sourceContent": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "INTIMATE",
            "PUBLIC"
          ]
        }
      },
      "title": "JournalWithCmtCountDTO"
    },
    "LinkDTO": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "logo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "team": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "LinkDTO"
    },
    "LinkParam": {
      "type": "object",
      "required": [
        "name",
        "url"
      ],
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "logo": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "team": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "url": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        }
      },
      "title": "LinkParam"
    },
    "LogDTO": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string"
        },
        "logKey": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "BLOG_INITIALIZED",
            "LOGGED_IN",
            "LOGGED_OUT",
            "LOGGED_PRE_CHECK",
            "LOGIN_FAILED",
            "MFA_UPDATED",
            "PASSWORD_UPDATED",
            "POST_DELETED",
            "POST_EDITED",
            "POST_PUBLISHED",
            "PROFILE_UPDATED",
            "SHEET_DELETED",
            "SHEET_EDITED",
            "SHEET_PUBLISHED"
          ]
        }
      },
      "title": "LogDTO"
    },
    "LoginParam": {
      "type": "object",
      "required": [
        "password",
        "username"
      ],
      "properties": {
        "authcode": {
          "type": "string",
          "minLength": 6,
          "maxLength": 6
        },
        "password": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "username": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "title": "LoginParam"
    },
    "LoginPreCheckDTO": {
      "type": "object",
      "properties": {
        "needMFACode": {
          "type": "boolean"
        }
      },
      "title": "LoginPreCheckDTO"
    },
    "MailParam": {
      "type": "object",
      "required": [
        "content",
        "subject",
        "to"
      ],
      "properties": {
        "content": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      },
      "title": "MailParam"
    },
    "MenuDTO": {
      "type": "object",
      "properties": {
        "icon": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "target": {
          "type": "string"
        },
        "team": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "MenuDTO"
    },
    "MenuParam": {
      "type": "object",
      "required": [
        "name",
        "url"
      ],
      "properties": {
        "icon": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "target": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "team": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "url": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        }
      },
      "title": "MenuParam"
    },
    "MenuVO": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MenuVO"
          }
        },
        "icon": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "target": {
          "type": "string"
        },
        "team": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "MenuVO"
    },
    "MultiFactorAuthParam": {
      "type": "object",
      "required": [
        "authcode"
      ],
      "properties": {
        "authcode": {
          "type": "string",
          "minLength": 6,
          "maxLength": 6
        },
        "mfaKey": {
          "type": "string"
        },
        "mfaType": {
          "type": "string",
          "enum": [
            "NONE",
            "TFA_TOTP"
          ]
        }
      },
      "title": "MultiFactorAuthParam"
    },
    "MultiFactorAuthVO": {
      "type": "object",
      "properties": {
        "mfaKey": {
          "type": "string"
        },
        "mfaType": {
          "type": "string",
          "enum": [
            "NONE",
            "TFA_TOTP"
          ]
        },
        "optAuthUrl": {
          "type": "string"
        },
        "qrImage": {
          "type": "string"
        }
      },
      "title": "MultiFactorAuthVO"
    },
    "Option": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "Option"
    },
    "OptionDTO": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "OptionDTO"
    },
    "OptionParam": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "type": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "INTERNAL"
          ]
        },
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        }
      },
      "title": "OptionParam"
    },
    "OptionSimpleDTO": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "key": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "INTERNAL"
          ]
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "OptionSimpleDTO"
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Pageable"
    },
    "Page«AttachmentDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentDTO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«AttachmentDTO»"
    },
    "Page«BaseCommentVO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseCommentVO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«BaseCommentVO»"
    },
    "Page«BaseCommentWithParentVO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseCommentWithParentVO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«BaseCommentWithParentVO»"
    },
    "Page«BasePostSimpleDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasePostSimpleDTO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«BasePostSimpleDTO»"
    },
    "Page«JournalCommentWithJournalVO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JournalCommentWithJournalVO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«JournalCommentWithJournalVO»"
    },
    "Page«JournalWithCmtCountDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JournalWithCmtCountDTO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«JournalWithCmtCountDTO»"
    },
    "Page«LogDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogDTO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«LogDTO»"
    },
    "Page«OptionSimpleDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionSimpleDTO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«OptionSimpleDTO»"
    },
    "Page«PhotoDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhotoDTO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«PhotoDTO»"
    },
    "Page«PostCommentWithPostVO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostCommentWithPostVO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«PostCommentWithPostVO»"
    },
    "Page«SheetCommentWithSheetVO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SheetCommentWithSheetVO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«SheetCommentWithSheetVO»"
    },
    "Page«SheetListVO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SheetListVO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«SheetListVO»"
    },
    "PasswordParam": {
      "type": "object",
      "required": [
        "newPassword",
        "oldPassword"
      ],
      "properties": {
        "newPassword": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "oldPassword": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      },
      "title": "PasswordParam"
    },
    "PhotoDTO": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "takeTime": {
          "type": "string",
          "format": "date-time"
        },
        "team": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "PhotoDTO"
    },
    "PhotoParam": {
      "type": "object",
      "required": [
        "name",
        "thumbnail",
        "url"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "takeTime": {
          "type": "string",
          "format": "date-time"
        },
        "team": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "PhotoParam"
    },
    "Post": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "disallowComment": {
          "type": "boolean"
        },
        "editTime": {
          "type": "string",
          "format": "date-time"
        },
        "editorType": {
          "type": "string",
          "enum": [
            "MARKDOWN",
            "RICHTEXT"
          ]
        },
        "formatContent": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "likes": {
          "type": "integer",
          "format": "int64"
        },
        "metaDescription": {
          "type": "string"
        },
        "metaKeywords": {
          "type": "string"
        },
        "originalContent": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "INTIMATE",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "summary": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "topPriority": {
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string"
        },
        "visits": {
          "type": "integer",
          "format": "int64"
        },
        "wordCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Post"
    },
    "PostComment": {
      "type": "object",
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "authorUrl": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "gravatarMd5": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "enum": [
            "AUDITING",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "topPriority": {
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "userAgent": {
          "type": "string"
        }
      },
      "title": "PostComment"
    },
    "PostCommentParam": {
      "type": "object",
      "required": [
        "author",
        "content",
        "email"
      ],
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "authorUrl": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "content": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "email": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "postId": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "exclusiveMinimum": false
        }
      },
      "title": "PostCommentParam"
    },
    "PostCommentWithPostVO": {
      "type": "object",
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "authorUrl": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "gravatarMd5": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "post": {
          "$ref": "#/definitions/BasePostMinimalDTO"
        },
        "status": {
          "type": "string",
          "enum": [
            "AUDITING",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "userAgent": {
          "type": "string"
        }
      },
      "title": "PostCommentWithPostVO"
    },
    "PostContentParam": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      },
      "title": "PostContentParam"
    },
    "PostDetailVO": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryDTO"
          }
        },
        "categoryIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "commentCount": {
          "type": "integer",
          "format": "int64"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "disallowComment": {
          "type": "boolean"
        },
        "editTime": {
          "type": "string",
          "format": "date-time"
        },
        "editorType": {
          "type": "string",
          "enum": [
            "MARKDOWN",
            "RICHTEXT"
          ]
        },
        "formatContent": {
          "type": "string"
        },
        "fullPath": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "likes": {
          "type": "integer",
          "format": "int64"
        },
        "metaDescription": {
          "type": "string"
        },
        "metaIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "metaKeywords": {
          "type": "string"
        },
        "metas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseMetaDTO"
          }
        },
        "originalContent": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "INTIMATE",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "summary": {
          "type": "string"
        },
        "tagIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagDTO"
          }
        },
        "template": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "topPriority": {
          "type": "integer",
          "format": "int32"
        },
        "topped": {
          "type": "boolean"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "visits": {
          "type": "integer",
          "format": "int64"
        },
        "wordCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PostDetailVO"
    },
    "PostMarkdownParam": {
      "type": "object",
      "properties": {
        "needFrontMatter": {
          "type": "boolean"
        }
      },
      "title": "PostMarkdownParam"
    },
    "PostMetaParam": {
      "type": "object",
      "required": [
        "key",
        "postId",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        }
      },
      "title": "PostMetaParam"
    },
    "PostParam": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "categoryIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "disallowComment": {
          "type": "boolean"
        },
        "editorType": {
          "type": "string",
          "enum": [
            "MARKDOWN",
            "RICHTEXT"
          ]
        },
        "metaDescription": {
          "type": "string"
        },
        "metaKeywords": {
          "type": "string"
        },
        "metas": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PostMetaParam"
          }
        },
        "originalContent": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "slug": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "INTIMATE",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "summary": {
          "type": "string"
        },
        "tagIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "template": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "thumbnail": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "topPriority": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        }
      },
      "title": "PostParam"
    },
    "ResetPasswordParam": {
      "type": "object",
      "required": [
        "email",
        "username"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "ResetPasswordParam"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "type": "file"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "type": "string",
          "format": "uri"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      },
      "title": "Resource"
    },
    "SheetComment": {
      "type": "object",
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "authorUrl": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "gravatarMd5": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "enum": [
            "AUDITING",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "topPriority": {
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "userAgent": {
          "type": "string"
        }
      },
      "title": "SheetComment"
    },
    "SheetCommentParam": {
      "type": "object",
      "required": [
        "author",
        "content",
        "email"
      ],
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "authorUrl": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "content": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "email": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "postId": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "exclusiveMinimum": false
        }
      },
      "title": "SheetCommentParam"
    },
    "SheetCommentWithSheetVO": {
      "type": "object",
      "properties": {
        "allowNotification": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "authorUrl": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "gravatarMd5": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ipAddress": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "sheet": {
          "$ref": "#/definitions/BasePostMinimalDTO"
        },
        "status": {
          "type": "string",
          "enum": [
            "AUDITING",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "userAgent": {
          "type": "string"
        }
      },
      "title": "SheetCommentWithSheetVO"
    },
    "SheetDetailVO": {
      "type": "object",
      "properties": {
        "commentCount": {
          "type": "integer",
          "format": "int64"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "disallowComment": {
          "type": "boolean"
        },
        "editTime": {
          "type": "string",
          "format": "date-time"
        },
        "editorType": {
          "type": "string",
          "enum": [
            "MARKDOWN",
            "RICHTEXT"
          ]
        },
        "formatContent": {
          "type": "string"
        },
        "fullPath": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "likes": {
          "type": "integer",
          "format": "int64"
        },
        "metaDescription": {
          "type": "string"
        },
        "metaIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "metaKeywords": {
          "type": "string"
        },
        "metas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseMetaDTO"
          }
        },
        "originalContent": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "INTIMATE",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "summary": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "topPriority": {
          "type": "integer",
          "format": "int32"
        },
        "topped": {
          "type": "boolean"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "visits": {
          "type": "integer",
          "format": "int64"
        },
        "wordCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SheetDetailVO"
    },
    "SheetListVO": {
      "type": "object",
      "properties": {
        "commentCount": {
          "type": "integer",
          "format": "int64"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "disallowComment": {
          "type": "boolean"
        },
        "editTime": {
          "type": "string",
          "format": "date-time"
        },
        "editorType": {
          "type": "string",
          "enum": [
            "MARKDOWN",
            "RICHTEXT"
          ]
        },
        "fullPath": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "likes": {
          "type": "integer",
          "format": "int64"
        },
        "metaDescription": {
          "type": "string"
        },
        "metaKeywords": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "INTIMATE",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "summary": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "topPriority": {
          "type": "integer",
          "format": "int32"
        },
        "topped": {
          "type": "boolean"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "visits": {
          "type": "integer",
          "format": "int64"
        },
        "wordCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SheetListVO"
    },
    "SheetMetaParam": {
      "type": "object",
      "required": [
        "key",
        "postId",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        }
      },
      "title": "SheetMetaParam"
    },
    "SheetParam": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "disallowComment": {
          "type": "boolean"
        },
        "editorType": {
          "type": "string",
          "enum": [
            "MARKDOWN",
            "RICHTEXT"
          ]
        },
        "metaDescription": {
          "type": "string"
        },
        "metaKeywords": {
          "type": "string"
        },
        "metas": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SheetMetaParam"
          }
        },
        "originalContent": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "slug": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "INTIMATE",
            "PUBLISHED",
            "RECYCLE"
          ]
        },
        "summary": {
          "type": "string"
        },
        "template": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "thumbnail": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "topPriority": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        }
      },
      "title": "SheetParam"
    },
    "Sort": {
      "type": "object",
      "properties": {
        "sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Sort"
    },
    "StaticContentParam": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "title": "StaticContentParam"
    },
    "StaticFile": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticFile"
          }
        },
        "createTime": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "isFile": {
          "type": "boolean"
        },
        "mimeType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        }
      },
      "title": "StaticFile"
    },
    "StatisticDTO": {
      "type": "object",
      "properties": {
        "attachmentCount": {
          "type": "integer",
          "format": "int64"
        },
        "birthday": {
          "type": "integer",
          "format": "int64"
        },
        "categoryCount": {
          "type": "integer",
          "format": "int64"
        },
        "commentCount": {
          "type": "integer",
          "format": "int64"
        },
        "establishDays": {
          "type": "integer",
          "format": "int64"
        },
        "journalCount": {
          "type": "integer",
          "format": "int64"
        },
        "likeCount": {
          "type": "integer",
          "format": "int64"
        },
        "linkCount": {
          "type": "integer",
          "format": "int64"
        },
        "postCount": {
          "type": "integer",
          "format": "int64"
        },
        "tagCount": {
          "type": "integer",
          "format": "int64"
        },
        "visitCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "StatisticDTO"
    },
    "StatisticWithUserDTO": {
      "type": "object",
      "properties": {
        "attachmentCount": {
          "type": "integer",
          "format": "int64"
        },
        "birthday": {
          "type": "integer",
          "format": "int64"
        },
        "categoryCount": {
          "type": "integer",
          "format": "int64"
        },
        "commentCount": {
          "type": "integer",
          "format": "int64"
        },
        "establishDays": {
          "type": "integer",
          "format": "int64"
        },
        "journalCount": {
          "type": "integer",
          "format": "int64"
        },
        "likeCount": {
          "type": "integer",
          "format": "int64"
        },
        "linkCount": {
          "type": "integer",
          "format": "int64"
        },
        "postCount": {
          "type": "integer",
          "format": "int64"
        },
        "tagCount": {
          "type": "integer",
          "format": "int64"
        },
        "user": {
          "$ref": "#/definitions/UserDTO"
        },
        "visitCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "StatisticWithUserDTO"
    },
    "TagDTO": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "fullPath": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      },
      "title": "TagDTO"
    },
    "TagParam": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "slug": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "thumbnail": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        }
      },
      "title": "TagParam"
    },
    "ThemeContentParam": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "title": "ThemeContentParam"
    },
    "ThemeFile": {
      "type": "object",
      "properties": {
        "editable": {
          "type": "boolean"
        },
        "isFile": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "node": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThemeFile"
          }
        },
        "path": {
          "type": "string"
        }
      },
      "title": "ThemeFile"
    },
    "ThemeProperty": {
      "type": "object",
      "properties": {
        "activated": {
          "type": "boolean"
        },
        "author": {
          "$ref": "#/definitions/Author"
        },
        "branch": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "folderName": {
          "type": "string"
        },
        "hasOptions": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "postMetaField": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "repo": {
          "type": "string"
        },
        "require": {
          "type": "string"
        },
        "screenshots": {
          "type": "string"
        },
        "sheetMetaField": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "themePath": {
          "type": "string"
        },
        "updateStrategy": {
          "type": "string",
          "enum": [
            "BRANCH",
            "RELEASE"
          ]
        },
        "version": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      },
      "title": "ThemeProperty"
    },
    "UserDTO": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "mfaType": {
          "type": "string",
          "enum": [
            "NONE",
            "TFA_TOTP"
          ]
        },
        "nickname": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "UserDTO"
    },
    "UserParam": {
      "type": "object",
      "required": [
        "email",
        "nickname",
        "username"
      ],
      "properties": {
        "avatar": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1023
        },
        "email": {
          "type": "string",
          "minLength": 0,
          "maxLength": 127
        },
        "nickname": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "password": {
          "type": "string",
          "minLength": 8,
          "maxLength": 100
        },
        "username": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        }
      },
      "title": "UserParam"
    }
  }
}